[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.11.6 (Eclipse Adoptium Java 17.0.16)
[debug] Load.defaultLoad until apply took 386.143ms
[debug]                       Load.loadUnit: plugins took 96.5546ms
[debug]                       Load.loadUnit: defsScala took 0.2742ms
[debug] [Loading] Scanning directory D:\Big Scala Data Project Nr_1\project\project\project
[debug]                         Load.loadUnit: mkEval took 11.2119ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Big Scala Data Project Nr_1\project\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.9451 ms
[info] loading settings for project big-scala-data-project-nr_1-build-build-build from metals.sbt...
[debug]                           Load.resolveProject(big-scala-data-project-nr_1-build-build-build) took 40.2401ms
[debug]                         Load.loadTransitive: finalizeProject(Project(id big-scala-data-project-nr_1-build-build-build, base: D:\Big Scala Data Project Nr_1\project\project\project, plugins: List(<none>))) took 75.1153ms
[debug] [Loading] Done in D:\Big Scala Data Project Nr_1\project\project\project, returning: (big-scala-data-project-nr_1-build-build-build)
[debug]                       Load.loadUnit: loadedProjectsRaw took 387.628ms
[debug]                       Load.loadUnit: cleanEvalClasses took 8.7429ms
[debug]                     Load.loadUnit(file:/D:/Big%20Scala%20Data%20Project%20Nr_1/project/project/project/, ...) took 503.1805ms
[debug]                   Load.apply: load took 1187.5122ms
[debug]                   Load.apply: resolveProjects took 5.1499ms
[debug]                   Load.apply: finalTransforms took 62.1102ms
[debug]                   Load.apply: config.delegates took 9.7085ms
[debug]                   Load.apply: Def.make(settings)... took 411.5146ms
[debug]                   Load.apply: structureIndex took 72.527ms
[debug]                   Load.apply: mkStreams took 1.4505ms
[info] loading project definition from D:\Big Scala Data Project Nr_1\project\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]                 Load.loadUnit: plugins took 2734.8371ms
[debug]                 Load.loadUnit: defsScala took 0.0061ms
[debug] [Loading] Scanning directory D:\Big Scala Data Project Nr_1\project\project
[debug]                   Load.loadUnit: mkEval took 0.2885ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Big Scala Data Project Nr_1\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7052 ms
[info] loading settings for project big-scala-data-project-nr_1-build-build from metals.sbt...
[debug]                     Load.resolveProject(big-scala-data-project-nr_1-build-build) took 17.6911ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id big-scala-data-project-nr_1-build-build, base: D:\Big Scala Data Project Nr_1\project\project, plugins: List(<none>))) took 19.9833ms
[debug] [Loading] Done in D:\Big Scala Data Project Nr_1\project\project, returning: (big-scala-data-project-nr_1-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 55.6784ms
[debug]                 Load.loadUnit: cleanEvalClasses took 2.3234ms
[debug]               Load.loadUnit(file:/D:/Big%20Scala%20Data%20Project%20Nr_1/project/project/, ...) took 2793.7108ms
[debug]             Load.apply: load took 2796.0913ms
[debug]             Load.apply: resolveProjects took 0.1527ms
[debug]             Load.apply: finalTransforms took 17.3197ms
[debug]             Load.apply: config.delegates took 0.3782ms
[debug]             Load.apply: Def.make(settings)... took 191.7646ms
[debug]             Load.apply: structureIndex took 47.9166ms
[debug]             Load.apply: mkStreams took 0.0032ms
[info] loading project definition from D:\Big Scala Data Project Nr_1\project\project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[success] Generated .bloop\big-scala-data-project-nr_1-build-build.json
[success] Total time: 5 s, completed Oct 2, 2025, 2:22:46 PM
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 8636.7381ms
[debug]           Load.loadUnit: defsScala took 0.002ms
[debug] [Loading] Scanning directory D:\Big Scala Data Project Nr_1\project
[debug]             Load.loadUnit: mkEval took 0.1896ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Big Scala Data Project Nr_1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.9015 ms
[info] loading settings for project big-scala-data-project-nr_1-build from metals.sbt, plugins.sbt...
[debug]               Load.resolveProject(big-scala-data-project-nr_1-build) took 15.0273ms
[debug]             Load.loadTransitive: finalizeProject(Project(id big-scala-data-project-nr_1-build, base: D:\Big Scala Data Project Nr_1\project, plugins: List(<none>))) took 16.2538ms
[debug] [Loading] Done in D:\Big Scala Data Project Nr_1\project, returning: (big-scala-data-project-nr_1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 50.435ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.8828ms
[debug]         Load.loadUnit(file:/D:/Big%20Scala%20Data%20Project%20Nr_1/project/, ...) took 8692.7335ms
[debug]       Load.apply: load took 8694.8486ms
[debug]       Load.apply: resolveProjects took 0.1321ms
[debug]       Load.apply: finalTransforms took 12.4557ms
[debug]       Load.apply: config.delegates took 0.459ms
[debug]       Load.apply: Def.make(settings)... took 75.596ms
[debug]       Load.apply: structureIndex took 32.2677ms
[debug]       Load.apply: mkStreams took 0.0035ms
[info] loading project definition from D:\Big Scala Data Project Nr_1\project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[success] Generated .bloop\big-scala-data-project-nr_1-build.json
[success] Total time: 2 s, completed Oct 2, 2025, 2:22:49 PM
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 10848.7172ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory D:\Big Scala Data Project Nr_1
[debug]       Load.loadUnit: mkEval took 0.1967ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Big Scala Data Project Nr_1, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbtassembly.AssemblyPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.scalafmt.sbt.ScalafmtPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scalafmt.sbt.ScalafmtPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbtassembly.AssemblyPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.scalafmt.sbt.ScalafmtPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.842 ms
[info] loading settings for project big-scala-data-project-nr_1 from build.sbt...
[debug]         Load.resolveProject(big-scala-data-project-nr_1) took 36.9945ms
[debug]       Load.loadTransitive: finalizeProject(Project(id big-scala-data-project-nr_1, base: D:\Big Scala Data Project Nr_1, plugins: List(<none>))) took 39.9113ms
[debug] [Loading] Done in D:\Big Scala Data Project Nr_1, returning: (big-scala-data-project-nr_1)
[debug]     Load.loadUnit: loadedProjectsRaw took 242.0929ms
[debug]     Load.loadUnit: cleanEvalClasses took 29.0921ms
[debug]   Load.loadUnit(file:/D:/Big%20Scala%20Data%20Project%20Nr_1/, ...) took 11122.1894ms
[debug] Load.apply: load took 11167.4867ms
[debug] Load.apply: resolveProjects took 0.131ms
[debug] Load.apply: finalTransforms took 159.0359ms
[debug] Load.apply: config.delegates took 0.6726ms
[debug] Load.apply: Def.make(settings)... took 69.4894ms
[debug] Load.apply: structureIndex took 20.1953ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to log-analytics-pipeline (in build file:/D:/Big%20Scala%20Data%20Project%20Nr_1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(runMain com.example.ecommerce.spark.EcomBatchJob, None, None)
[debug] Evaluating tasks: Compile / runMain
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] In the last 1828 seconds, 7.976 (0.4%) were spent in GC. [Heap: 0.92GB free of 1.00GB, max 1.00GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.
